export default {
  title: 'Интернационализация (i18n)',
  locales: {
    'ru-RU': 'Русский',
    'en-EN': 'Английский',
  },
  content: {
    pLocale: `Перевод текстов осуществляется по словарю с использованием кода фразы.
      Поддерживается плюрализация (варианты перевода с учётом множественного числа).
      Также можно использовать области в переводах для вставки значений.
      Поддерживается форматирование чисел с учётом локали.
    `,
    pDic: `Словари представлены в формате JSON или как модули JS/TS. Они могут иметь как плоскую, так и вложенную структуру.
      Словари подключаются через DI.
      Возможен динамический импорт словаря при первом обращении к нему по переводимой фразе.
      В этом случаи вместо самого словаря подключается асинхронная функция загрузки словаря.
      Поддерживается логика Suspense для ожидания загрузки.
      Для каждой локали можно подключать несколько именованных словарей (например, один словарь для каждого модуля приложения).
      Имя словаря учитывается в коде фразы для перевода.
      Если перевода нет в словаре для текущей локали, используется перевод из базовой локали.
    `,
    pDetect: `По умолчанию локаль определяется автоматически на основе заголовка Accept-Language с учетом
      поддерживаемых локалей (для которых есть словари). Установленная пользователем локаль сохраняется в куках,
      чтобы восстанавливать выбор и учитывать локаль при серверном рендеринге.
      При смене локали могут обновляться зависимости в других сервисах.
      Например, заголовки API для получения данных в нужной локали.`,

    pHook: `Все функции интернационализации реализованы через сервис i18n. В React-компонентах к текущей
      локали, функции для её смены, а также к функциям перевода можно обратиться через хук useI18n().
      Хук автоматически подписывает компонент на изменения локали и загрузку словарей, чтобы при их
      обновлении компонент перерисовывался.`,
  },
};
